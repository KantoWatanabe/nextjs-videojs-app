import Head from 'next/head'
import VideoJS, { VideoJsOptions } from '@/components/videojs'
import React from 'react';
import Player from 'video.js/dist/types/player';

export default function Home() {
  const playerRef = React.useRef<Player | null>(null);
  let options: VideoJsOptions = {
    autoplay: true,
    controls: true,
    responsive: true,
    fluid: true,
    sources: [{
      src: 'http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4',
      type: 'video/mp4'
    }]
  };
  // useStateしないと子コンポーネントのVideoJSへVideoJsOptionsの変更が検知されない
  const [videoJsOptions, setVideoJsOptions] = React.useState<VideoJsOptions>(options);

  const handlePlayerReady = (player: Player) => {
    playerRef.current = player;

    // You can handle player events here, for example:
    player.on('waiting', () => {
      console.log('player is waiting');
    });

    player.on('dispose', () => {
      console.log('player will dispose');
    });
  };

  const handleClick = () => {
    // optionsの中身を書き換えてsetVideoJsOptionsしただけでは子コンポーネントのVideoJSへVideoJsOptionsの変更が検知されない
    //options.sources[0].src = "https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8";
    //options.sources[0].type = "application/x-mpegURL";
    options = {
      autoplay: true,
      controls: true,
      responsive: true,
      fluid: true,
      sources: [{
        src: 'https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8',
        type: 'application/x-mpegURL'
      }]
    };
    setVideoJsOptions(options);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <p>
            videojs sample
          </p>
          <div>
            <a
              href="https://videojs.com/guides/react/"
              target="_blank"
              rel="noopener noreferrer"
            >
              React and Video.js
            </a>
          </div>
          <div>
            <button onClick={handleClick}>hls mode</button>
            <span>{videoJsOptions.sources[0].src}</span>
          </div>
        </div>
        <div>
          <VideoJS options={videoJsOptions} onReady={handlePlayerReady} />
        </div>
      </main>
    </>
  )
}
